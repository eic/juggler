variables:
  EIC_TAG: "2.6-stable"

default:
  image: eicweb.phy.anl.gov:4567/containers/image_recipes/ubuntu_dind:latest
  tags: 
    - silicon

stages:
  - config
  - build
  - push
  - deploy
  - cleanup

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_TAG'

env:
  stage: config 
  script:
    - export JUGGLER_TAG="latest"
    - |
      if [ "x${CI_PIPELINE_SOURCE}" == "xmerge_request_event" ]; then
        export JUGGLER_TAG="testing-mr-${CI_MERGE_REQUEST_IID}"
      fi
    - echo "CI JUGGLER_TAG for this pipeline set to ${JUGGLER_TAG}"
    - echo "JUGGLER_TAG=$JUGGLER_TAG" >> juggler.env
    - |
      if [ "${DETECTOR_TAG}" ]; then
        echo "DETECTOR_TAG=$DETECTOR_TAG" >> juggler.env
      fi
  artifacts:
    reports:
      dotenv: juggler.env
 
docker:
  stage: build
  needs:
    - env
  script:
    - echo $JUGGLER_TAG
    - ./.gitlabci/configure.sh .containers/Dockerfile.in
    - cd .containers
    - make build-nc
      #- make build-nc

publish:
  stage: push
  needs:
    - env
    - docker
  script:
    - cd .containers
    - |
      if [ "x$CI_COMMIT_TAG" != "x" ]; then
        make publish publish-version
      else
        make publish
      fi
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

.singularity:
  stage: deploy
  needs: 
    - env
    - publish
  script:
    - ./.gitlabci/configure.sh .containers/juggler.def.in
    - mkdir -p build
    - mv .containers/juggler.def build
    - singularity build build/juggler.sif build/juggler.def
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

singularity:latest:
  extends: .singularity
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - if: '$CI_COMMIT_TAG'
      when: on_success
  artifacts:
    expire_in: 90 days
    paths:
      - build/juggler.sif
      - build/juggler.def

singularity:testing:
  extends: .singularity
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
  artifacts:
    expire_in: 1 days
    paths:
      - build/juggler.sif
      - build/juggler.def

benchmarks:reconstruction:
  stage: deploy
  needs: 
    - env
    - publish
  variables:
    JUGGLER_TAG: "$JUGGLER_TAG"
  trigger:
    project: EIC/benchmarks/reconstruction_benchmarks
    strategy: depend

  
benchmarks:physics:
  stage: deploy
  needs: 
    - env
    - publish
  variables:
    JUGGLER_TAG: "$JUGGLER_TAG"
  trigger:
    project: EIC/benchmarks/physics_benchmarks
    strategy: depend

purge_image:
  stage: cleanup
  dependencies:
    - env
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - cd .containers
    - make cleanup unpublish
      #- make unpublish

      
