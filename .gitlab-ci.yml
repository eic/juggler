image: eicweb.phy.anl.gov:4567/containers/image_recipes/ubuntu_dind:latest

variables:
  ## Base eic_dev image is testing. This puts the container at the same level as
  ## the nightly release. For now we tag the main as:
  ##  - juggler:testing (for CI usage)
  ##  - We also trigger the eic_container master to rebuild the jug_xl nightly
  EIC_DEV_TAG: "testing"
  JUGGLER_IMAGE: "juggler"
  DEFAULT_TAG: "testing"

  ## We have:
  ##   - Juggler triggers eic_container on a main pipeline
  ##   - eic_container triggers juggler on nightly builds
  ## this way jug_xl:nightly and juggler:testing are kept in sync

  ## We need to enable Docker Buildkit to use cache mounts and better
  ## build performance overal
  DOCKER_BUILDKIT: 1

  ## Dockerhub registry
  DH_REGISTRY_USER: eicweb
  DH_PUSH: 1
  ## GitHub registry
  GH_REGISTRY: ghcr.io
  GH_PUSH: 0

  ## TLS error resiliency: number of retries and second wait between tries 
  ## (wait time is doubled with each attempt)
  DOCKER_NTRIES: 5
  DOCKER_WAIT_TIME: 5

  ## variable set to 1 when triggered by eic_container nightly
  ## build. This is to avoid circular dependencies
  TRIGGERED_BY_NIGHTLY: 0

stages:
  - build
  - analysis
  - config
  - docker    ## build new version of juggler
  - deploy    ## repo-local singularity image for development work

workflow:
  ## Only rebuild on MRs and on commits to the main, as in other cases
  ## we should use the tagged jug_xl releases from eic_container.
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'

default:

## plan:
##  Workflows:
##  - main        --> config + docker (eic_container) + singularity (this repo)
##      --> trigger eic_container master
##  - MR          --> config + docker (eic_container) + singularity (this repo)
##  - upstream trigger from eic_container (nightly) --> run main
##
##  Container images tags
##  - main        --> nightly on eicweb & DH, and export to eic_container
##  - MR          --> unstable-mr-XXX (on eicweb only, untag at end of pipeline)

juggler:local:
  image: eicweb.phy.anl.gov:4567/containers/eic_container/jug_xl:nightly
  stage: build
  parallel:
    matrix:
    - CMAKE_CXX_STANDARD:
      - 17
  script:
    - |
      cmake -Bbuild -S. -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD} -DCMAKE_INSTALL_PREFIX=/usr/local
      cmake --build build -j20
  artifacts:
    expire_in: 1 hour
    paths:
      - build/

analysis:clang-tidy:
  image: eicweb.phy.anl.gov:4567/containers/eic_container/jug_xl:nightly
  stage: analysis
  needs: 
    - juggler:local
  script:
    - |
      run-clang-tidy -p build -j20 -export-fixes clang_tidy_fixes.yml -extra-arg='-std=c++17'
  artifacts:
    expire_in: 1 week
    paths:
      - clang_tidy_fixes.yml

version:
  stage: config 
  rules:
    - if:  '$CI_SERVER_HOST == "eicweb.phy.anl.gov"'
  script:
    - |
      ## version info
      VERSION=`head -n1 VERSION`
      ## internal tag used for the CI. Also temporarily tagged
      ## on eicweb to communicate between jobs (removed in cleanup job)
      INTERNAL_TAG="${DEFAULT_TAG}-${VERSION}"
      if [ "x${CI_PIPELINE_SOURCE}" == "xmerge_request_event" ]; then
        INTERNAL_TAG="unstable-mr-${CI_MERGE_REQUEST_PROJECT_ID}-${CI_MERGE_REQUEST_IID}"
      fi
      echo "VERSION=$VERSION" >> build.env
      echo "INTERNAL_TAG=$INTERNAL_TAG" >> build.env
      echo "CI_REGISTRY=$CI_REGISTRY" >> build.env
      echo "CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE" >> build.env
      echo "BUILD_IMAGE=$JUGGLER_IMAGE" >> build.env
      cat build.env
  artifacts:
    reports:
      dotenv: build.env

jug_xl:master:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $TRIGGERED_BY_NIGHTLY == "0" && $CI_SERVER_HOST == "eicweb.phy.anl.gov"'
      when: on_success
    - when: never
  needs:
    - version
  trigger:
    project: containers/eic_container
  allow_failure: false

pages:
  image: eicweb.phy.anl.gov:4567/containers/eic_container/alpine
  stage: deploy
  rules:
    - if: '$CI_SERVER_HOST == "gitlab.phy.anl.gov" && $CI_COMMIT_BRANCH == "main"' 
  script:
    - apk update && apk add doxygen  graphviz ttf-ubuntu-font-family
    - cd doc && doxygen Doxyfile  && cd ..
    - mkdir -p public && cp -r doc/docs/html/* public/.
  artifacts:
    paths:
    - public
